<?php

/**
 * 一个帮助
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function current_posts_help($path, $arg) {
  switch ($path) {
    case "admin/help#current_posts":
      return t("Displays links to nodes created on this date");
      break;
  }
}

/**
 * 区块
 * Implements hook_block_info().
 * https://www.drupal.org/docs/7/creating-custom-modules/declaring-the-block
 */
function current_posts_block_info() {
  $blocks['current_posts'] = array(
    // The name that will appear in the block list.
    'info' => t('Current posts'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}
/**
 * 启用数据库命令
 * http://drupalchina.cn/doc/915.html
 *
 * Custom content function.
 *
 * Set beginning and end dates, retrieve posts from database
 * saved in that time period.
 *
 * @return
 *   A result set of the targeted posts.
 */
function current_posts_contents($display){   //$display argument is new.
  $max_num = variable_get('current_posts_max', 3); //后台表单设置

  $query = db_select('taxonomy_term_data', 'ttd')->fields('ttd')->condition('vid', 2);
  $taxonomy_term_data_list = $query->execute()->fetchAll();

  $items = [];
  foreach ($taxonomy_term_data_list as $key => $taxonomy_term_data) {
    $row = [
      'data' => $taxonomy_term_data->name,
    ];
    $query = db_select('taxonomy_index', 'ti')->fields('ti', ['nid','tid'])
      ->condition('tid', $taxonomy_term_data->tid);
    $nids = $query->execute()->fetchCol();
    if (!empty($nids)) {
      $nodes = node_load_multiple($nids);
      $sub_items = array();
      foreach ($nodes as $key => $node) {
        $sub_items[] = ['data' => "<a href=\"{$node->field_url['und'][0]['url']}\" target=\"_blank\">{$node->title}</a>",];
      }
      $row['children'] = $sub_items;
    }
    $items[] = $row;
  }
  return $items;
}
/**
 * https://www.drupal.org/docs/7/creating-custom-modules/generating-block-content
 *
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function current_posts_block_view($delta = '') {
  switch ($delta) {
    case 'current_posts':
      $block['subject'] = '友情链接';
      if (user_access('access content')) {
        // Use our custom function to retrieve data.
        $items = current_posts_contents('block');
        // No content in the last week.
        if (empty($items)) {
          $block['content'] = t('No posts available.');
        } else {
          // Pass data through theme function.
          $block['content'] = theme('item_list', array(
            'items' => $items));
        }
      }
    return $block;
  }
}

/**
 * 后台配置表单
 * https://www.drupal.org/docs/7/creating-custom-modules/preparing-for-a-module-configuration-form
 *
 * Implements hook_menu().
 */
function current_posts_menu() {
  $items = array();

  $items['admin/config/content/current_posts'] = array(
    'title' => 'Current posts',
    'description' => 'Configuration for Current posts module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('current_posts_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  //权限
  $items['current_posts'] = array(
    'title' => 'Current posts',
    'page callback' => '_current_posts_page',
    'access arguments' => array('access current_posts content'),
    'type' => MENU_CALLBACK, // Will appear in Navigation menu.
  );

  return $items;
}
/**
 * https://www.drupal.org/docs/7/creating-custom-modules/creating-the-configuration-form
 *
 * Page callback: Current posts settings
 *
 * @see current_posts_menu()
 */
function current_posts_form($form, &$form_state) {
  $form['current_posts_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of posts'),
    '#default_value' => variable_get('current_posts_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of links to display in the block.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * 验证表单
 * https://www.drupal.org/docs/7/creating-custom-modules/validating-the-data
 * Implements validation from the Form API.
 *
 * @param $form
 *   A structured array containing the elements and properties of the form.
 * @param $form_state
 *   An array that stores information about the form's current state
 *   during processing.
 */
function current_posts_form_validate($form, &$form_state){
  $max_num = $form_state['values']['current_posts_max'];
  if (!is_numeric($max_num)){
    form_set_error('current_posts_max', t('You must enter a number for the maximum number of posts to display.'));
  }
  elseif ($max_num <= 0){
    form_set_error('current_posts_max', t('Maximum number of posts to display must be positive.'));
  }
}

/**
 * 新页面权限
 * http://drupalchina.cn/doc/913.html
 * Implements hook_permission().
 */
function current_posts_permission() {
  return array(
    'access current_posts content' => array(
      'title' => t('Access content for the Current posts module'),
    )
  );
}
/**
 * 主题化页面
 * http://drupalchina.cn/doc/931.html
* Custom page callback function, declared in current_posts_menu().
*/
function _current_posts_page() {
  $result = current_posts_contents('page');
  //Array to contain items for the page to render.
  $items = array();
  //Iterate over the resultset and format as links.
  foreach ($result as $node) {
    $items[] = array(
    'data' => l($node->title, 'node/' . $node->nid),
    );
  }
  if (empty($items)) { //No content in the last week.
    $page_array['current_posts_arguments'] = array(
      //Title serves as page subtitle
      '#title' => t('All posts from the last week'),
      '#markup' => t('No posts available.'),
    );
    return $page_array;
  }else {
    $page_array['current_posts_arguments'] = array(
      '#title' => t('All posts from the last week'),
      '#items' => $items,
      //Theme hook with suggestion.
      '#theme' => 'item_list__current_posts',
    );
    return $page_array;
  }
}
